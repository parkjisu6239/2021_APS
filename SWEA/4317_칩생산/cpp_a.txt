#include <iostream>
using namespace std;
int h, w;
int map[25][10];
int used[25][10];
int memo[25][(1 << 10) + 1];
int isClean(int y, int x)
{
	if (x >= w - 1) return 0;
	if (map[y][x] + map[y + 1][x] + map[y][x + 1] + map[y + 1][x + 1] > 0) return 0;
	if (used[y][x] + used[y + 1][x] + used[y][x + 1] + used[y + 1][x + 1] > 0) return 0;
	return 1;
}
void setNemo(int y, int x)
{
	used[y][x] = 2;
	used[y][x + 1] = 1;
	used[y + 1][x] = 1;
	used[y + 1][x + 1] = 1;
}
void clearNemo(int y, int x)
{
	used[y][x] = 0;
	used[y][x + 1] = 0;
	used[y + 1][x] = 0;
	used[y + 1][x + 1] = 0;
}
int getState(int y, int x) {
	int state = 0;
	for (int i = 0; i < w - 1; i++) {
		state <<= 1;
		if (used[y][i] == 2) state |= 0x1;
	}
	return state;
}
int getMaxChipCnt(int stage)
{
	int dy = stage / w;
	int dx = stage % w;
	int state = 0;
	if (dy == h - 2 && dx == w - 1) return 0;
	if (dx == w - 1) {
		state = getState(dy, dx);
		if (memo[dy][state] != 0) return memo[dy][state];
	}
	int maxi = 0;
	if (isClean(dy, dx)) {
		setNemo(dy, dx);
		maxi = getMaxChipCnt(stage + 1) + 1;
		clearNemo(dy, dx);
	}
	int ret = getMaxChipCnt(stage + 1);
	if (maxi < ret)  maxi = ret;
	if (dx == w - 1) {
		memo[dy][state] = maxi;
	}
	return maxi;
}
int main()
{
	//freopen("text.txt", "r", stdin);
	int tcCnt, ret;
	cin >> tcCnt;
	for (int tc = 1; tc <= tcCnt; tc++) {
		cin >> h >> w;
		for (int y = 0; y < h; y++) {
			for (int x = 0; x < w; x++) {
				cin >> map[x][y];
			}
		}
		//가로 세로 변경
		int temp = h;
		h = w;
		w = temp;
		for (int y = 0; y < h; y++) {
			for (int x = 0; x < (1 << w); x++) {
				memo[y][x] = 0;
			}
		}
		ret = getMaxChipCnt(0);
		cout << "#" << tc << " " << ret << "\n";
	}
	return 0;
}